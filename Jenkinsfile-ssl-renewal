pipeline {
    agent any

    stages {
        stage('Make a temp dir and sync certs') {
            steps{
                sshagent(['private-key']) {
                    sh (script: """
                        mkdir -p /tmp/temp_ssl_backup_`date +%F`
                        cd /tmp/temp_ssl_backup_`date +%F`
                        rsync -az redwan@10.10.10.11:~/fake_ssl/test_certs_import/ .
                        """
                    )
                }
            }
            post {
                success {
                    echo "ssl certifactes have been synched successfully ðŸ˜€"
                }
                failure {
                    echo "Could not sync ssl certifactes ðŸ˜Ÿ "
                }
            }  
        }

        stage('Encypt private ssl certificates') {
            steps {
                sh (script: """
                    ansible-vault encrypt --vault-password-file ~/.vault_password /tmp/temp_ssl_backup_`date +%F`/*/privkey.pem
                    """
                )
            }
            post {
                success {
                    echo "ssl certifactes have been ansible-encrypted successfully ðŸ˜€"
                }
                failure {
                    echo "Could not ansible-encrypt ssl certifactes ðŸ˜Ÿ "
                }
            }         
        }

        stage('Make a new repo branch and upload new encrypted certs') {
            steps {
                sh (script: """
                    git checkout -b ssl_certs_encrypt_`date +%F`
                    rsync -Paz /tmp/temp_ssl_backup_`date +%F`/test_certs_import/ files/ssl_certs/
                    git status
                    git add .
                    git status
                    """
                )
            }
            post {
                success {
                    echo "ssl certifactes have been pushed to the repoitory successfully ðŸ˜€"
                }
                failure {
                    echo "Could not pushed to repo ssl certifactes to the repoitory ðŸ˜Ÿ "
                }
            }         
        }


        // stage('Clean up') {
        //     steps {
        //         sh (script: """
        //             # remove the temp working dir
        //             # rm -rf /tmp/temp_ssl_backup_`date +%F`
        //             """
        //         )
        //     }
        //     post {
        //         success {
        //             echo "removed working dir from /tmp ðŸ˜€"
        //         }
        //         failure {
        //             echo "Could not remove working dir from /tmp ðŸ˜Ÿ "
        //         }
        //     }         
        // }




    }
}